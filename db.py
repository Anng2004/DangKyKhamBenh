import pyodbc

# C·∫•u h√¨nh k·∫øt n·ªëi SQL Server - THAY ƒê·ªîI THEO M√î‡∏¥I TR∆Ø·ªúNG C·ª¶A B·∫†N
CONN_STR = (
    "Driver={ODBC Driver 17 for SQL Server};"
    "Server=localhost;"                    # VD: localhost, DESKTOP-ABC\\SQLEXPRESS
    "Database=DangKyKhamBenh;"            # T√™n database - s·∫Ω t·ª± t·∫°o n·∫øu ch∆∞a c√≥
    "UID=SA;"                             # Username SQL Server  
    "PWD=Admin@123;"                      # Password SQL Server
    "TrustServerCertificate=yes;"
)

# Connection string cho master database ƒë·ªÉ t·∫°o database m·ªõi
MASTER_CONN_STR = (
    "Driver={ODBC Driver 17 for SQL Server};"
    "Server=localhost;" 
    "Database=master;"
    "UID=SA;"
    "PWD=Admin@123;"
    "TrustServerCertificate=yes;"
)

def create_database_if_not_exists():
    """T·∫°o database n·∫øu ch∆∞a t·ªìn t·∫°i"""
    try:
        # Extract database name from connection string
        import re
        db_match = re.search(r'Database=([^;]+)', CONN_STR)
        if not db_match:
            print("‚ùå Kh√¥ng t√¨m th·∫•y t√™n database trong connection string")
            return False
        
        database_name = db_match.group(1)
        print(f"üîç Ki·ªÉm tra database: {database_name}")
        
        # K·∫øt n·ªëi ƒë·∫øn master database
        conn = pyodbc.connect(MASTER_CONN_STR)
        conn.autocommit = True
        cur = conn.cursor()
        
        # Ki·ªÉm tra xem database ƒë√£ t·ªìn t·∫°i ch∆∞a
        cur.execute("SELECT name FROM sys.databases WHERE name = ?", (database_name,))
        if not cur.fetchone():
            print(f"üîß T·∫°o database {database_name}...")
            cur.execute(f"CREATE DATABASE [{database_name}]")
            print("‚úÖ Database ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")
        else:
            print(f"‚ÑπÔ∏è  Database {database_name} ƒë√£ t·ªìn t·∫°i")
        
        conn.close()
        return True
    except Exception as e:
        print(f"‚ùå L·ªói khi t·∫°o database: {e}")
        print("üí° H√£y ki·ªÉm tra:")
        print("   - SQL Server ƒë√£ ch·∫°y ch∆∞a?")
        print("   - Th√¥ng tin k·∫øt n·ªëi trong CONN_STR ƒë√£ ƒë√∫ng ch∆∞a?")
        print("   - User c√≥ quy·ªÅn t·∫°o database kh√¥ng?")
        return False

def get_conn():
    try:
        return pyodbc.connect(CONN_STR)
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi database: {e}")
        print("üí° H√£y ch·∫°y: python db.py ƒë·ªÉ kh·ªüi t·∫°o database")
        raise

def init_db(seed: bool = True) -> None:
    # T·∫°o database tr∆∞·ªõc n·∫øu ch∆∞a c√≥
    if not create_database_if_not_exists():
        return False
    
    conn = get_conn()
    cur = conn.cursor()

    # T·∫°o b·∫£ng User
    cur.execute("""
    IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='user' AND xtype='U')
    CREATE TABLE [user] (
        user_id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
        username NVARCHAR(50) UNIQUE NOT NULL,
        role NVARCHAR(20) NOT NULL,
        pass NVARCHAR(50) NOT NULL,
        created_at DATETIME DEFAULT GETDATE()
    );
    """)

    # T·∫°o b·∫£ng PhongKham
    cur.execute("""
    IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='PhongKham' AND xtype='U')
    CREATE TABLE PhongKham (
        PK_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
        MaPhong NVARCHAR(20) UNIQUE NOT NULL,
        TenPhong NVARCHAR(100) NOT NULL,
        BS_ID UNIQUEIDENTIFIER NULL,
        user_created UNIQUEIDENTIFIER,
        created_at DATETIME DEFAULT GETDATE()
    );
    """)

    # T·∫°o b·∫£ng DM_DichVuKyThuat
    cur.execute("""
    IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='DM_DichVuKyThuat' AND xtype='U')
    CREATE TABLE DM_DichVuKyThuat (
        dv_id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
        MaDichVu NVARCHAR(20) UNIQUE NOT NULL,
        TenDichVu NVARCHAR(100) NOT NULL,
        GiaDichVu INT NOT NULL,
        user_created UNIQUEIDENTIFIER,
        created_at DATETIME DEFAULT GETDATE()
    );
    """)

    # T·∫°o b·∫£ng BenhNhan
    cur.execute("""
    IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='BenhNhan' AND xtype='U')
    CREATE TABLE BenhNhan (
        BN_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
        PID NVARCHAR(8) UNIQUE NOT NULL,
        HoTen NVARCHAR(100) NOT NULL,
        GioiTinh NVARCHAR(10) NOT NULL,
        NgaySinh DATE NULL,
        NamSinh INT,
        SoCCCD NVARCHAR(20) UNIQUE,
        SoCMND NVARCHAR(20),
        PhuongXa NVARCHAR(200),
        Tinh NVARCHAR(50),
        user_created UNIQUEIDENTIFIER,
        created_at DATETIME DEFAULT GETDATE()
    );
    """)

    # Th√™m c·ªôt NgaySinh cho BenhNhan n·∫øu ch∆∞a c√≥
    cur.execute("""
    IF COL_LENGTH('BenhNhan', 'NgaySinh') IS NULL
        ALTER TABLE BenhNhan ADD NgaySinh DATE NULL;
    """)

    # Th√™m c·ªôt PID cho BenhNhan n·∫øu ch∆∞a c√≥
    cur.execute("""
    IF COL_LENGTH('BenhNhan', 'PID') IS NULL
        ALTER TABLE BenhNhan ADD PID NVARCHAR(8) NULL;
    """)

    # T·∫°o b·∫£ng BacSi
    cur.execute("""
    IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='BacSi' AND xtype='U')
    CREATE TABLE BacSi (
        BS_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
        MaBacSi NVARCHAR(20) UNIQUE NOT NULL,
        HoTen NVARCHAR(100) NOT NULL,
        ChuyenKhoa NVARCHAR(100),
        SoDienThoai NVARCHAR(15),
        Email NVARCHAR(100),
        user_created UNIQUEIDENTIFIER,
        created_at DATETIME DEFAULT GETDATE()
    );
    """)

    # T·∫°o b·∫£ng TiepNhan
    cur.execute("""
    IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='TiepNhan' AND xtype='U')
    CREATE TABLE TiepNhan (
        TiepNhan_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
        MaTiepNhan NVARCHAR(20) UNIQUE NOT NULL,
        BN_ID UNIQUEIDENTIFIER NOT NULL,
        LyDoKham NVARCHAR(200),
        Dv_ID UNIQUEIDENTIFIER NULL,
        PK_ID UNIQUEIDENTIFIER NULL,
        BS_ID UNIQUEIDENTIFIER NULL,
        user_created UNIQUEIDENTIFIER,
        created_at DATETIME DEFAULT GETDATE()
    );
    """)

    # T·∫°o Foreign Keys
    
    # Drop existing FK constraints first (if any)
    cur.execute("""
    IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_PhongKham_BacSi')
    ALTER TABLE PhongKham DROP CONSTRAINT FK_PhongKham_BacSi
    """)
    
    cur.execute("""
    IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_BenhNhan')
    ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_BenhNhan
    """)
    
    cur.execute("""
    IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_DichVu')
    ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_DichVu
    """)
    
    cur.execute("""
    IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_PhongKham')
    ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_PhongKham
    """)
    
    cur.execute("""
    IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_BacSi')
    ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_BacSi
    """)
    
    # FK cho PhongKham -> BacSi (NO ACTION - kh√¥ng cho x√≥a b√°c sƒ© khi c√≤n ph√≤ng kh√°m)
    cur.execute("""
    ALTER TABLE PhongKham ADD CONSTRAINT FK_PhongKham_BacSi 
    FOREIGN KEY (BS_ID) REFERENCES BacSi(BS_ID) ON DELETE NO ACTION
    """)
    
    # FK cho TiepNhan -> BenhNhan (NO ACTION - b·∫£o v·ªá t√≠nh to√†n v·∫πn d·ªØ li·ªáu)
    cur.execute("""
    ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_BenhNhan
    FOREIGN KEY (BN_ID) REFERENCES BenhNhan(BN_ID) ON DELETE NO ACTION
    """)
    
    # FK cho TiepNhan -> DichVu (NO ACTION - kh√¥ng cho x√≥a d·ªãch v·ª• khi c√≤n ti·∫øp nh·∫≠n)
    cur.execute("""
    ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_DichVu
    FOREIGN KEY (Dv_ID) REFERENCES DM_DichVuKyThuat(dv_id) ON DELETE NO ACTION
    """)
    
    # FK cho TiepNhan -> PhongKham (NO ACTION - kh√¥ng cho x√≥a ph√≤ng kh√°m khi c√≤n ti·∫øp nh·∫≠n)
    cur.execute("""
    ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_PhongKham
    FOREIGN KEY (PK_ID) REFERENCES PhongKham(PK_ID) ON DELETE NO ACTION
    """)
    
    # FK cho TiepNhan -> BacSi (NO ACTION - kh√¥ng cho x√≥a b√°c sƒ© khi c√≤n ti·∫øp nh·∫≠n)
    cur.execute("""
    ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_BacSi
    FOREIGN KEY (BS_ID) REFERENCES BacSi(BS_ID) ON DELETE NO ACTION
    """)

    if seed:
        # Insert initial admin user
        cur.execute("""
        IF NOT EXISTS (SELECT 1 FROM [user] WHERE username = 'admin')
        BEGIN
            DECLARE @admin_id UNIQUEIDENTIFIER = NEWID()
            INSERT INTO [user](user_id, username, role, pass) 
            VALUES (@admin_id, 'admin', 'ADMIN', 'admin')
            
            -- T·∫°o ph√≤ng kh√°m v√† d·ªãch v·ª• m·∫∑c ƒë·ªãnh
            INSERT INTO PhongKham(MaPhong, TenPhong, user_created) 
            VALUES ('PK001','Ph√≤ng N·ªôi t·ªïng qu√°t', @admin_id)
            
            INSERT INTO DM_DichVuKyThuat(MaDichVu, TenDichVu, GiaDichVu, user_created) 
            VALUES ('DV001','Kh√°m t·ªïng qu√°t', 150000, @admin_id)
        END
        """)

    conn.commit()
    conn.close()
    return True


# Run init_db when script is executed directly
if __name__ == "__main__":
    print("="*60)
    print("     üè• KH·ªûI T·∫†O DATABASE - H·ªÜ TH·ªêNG QU·∫¢N L√ù KH√ÅM B·ªÜNH")
    print("="*60)
    print("")
    print("üí° H∆∞·ªõng d·∫´n:")
    print("   1. ƒê·∫£m b·∫£o SQL Server ƒë√£ ch·∫°y")
    print("   2. Ki·ªÉm tra th√¥ng tin k·∫øt n·ªëi trong file db.py")
    print("   3. User c·∫ßn c√≥ quy·ªÅn t·∫°o database")
    print("")
    
    try:
        success = init_db(seed=True)
        if success:
            print("")
            print("üéâ Kh·ªüi t·∫°o database th√†nh c√¥ng!")
            print("")
            print("üìã Th√¥ng tin ƒëƒÉng nh·∫≠p:")
            print("   üë§ Username: admin")
            print("   üîí Password: admin")
            print("")
            print("üöÄ B∆∞·ªõc ti·∫øp theo:")
            print("   python import_data.py  # Import d·ªØ li·ªáu m·∫´u")
            print("   python app.py          # Ch·∫°y ·ª©ng d·ª•ng")
        else:
            print("")
            print("‚ùå Kh·ªüi t·∫°o database th·∫•t b·∫°i!")
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")
