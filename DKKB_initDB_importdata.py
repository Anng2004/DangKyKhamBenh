# import_data.py - Import d·ªØ li·ªáu m·∫´u cho h·ªá th·ªëng

import sys
from MSSQLServer import MSSQLConnection
from utils.message_utils import error, success, warning, info, print_separator

class InitDB:
    @classmethod
    def create_database_if_not_exists(cls, database_name="DangKyKhamBenh"):
        try:
            import re
            db_match = re.search(r'Database=([^;]+)', f"Database={database_name}")
            if not db_match:
                error("Kh√¥ng t√¨m th·∫•y t√™n database trong connection string")
                return False
            
            database_name = db_match.group(1)
            print(f"üîç Ki·ªÉm tra database: {database_name}")
            
            conn = MSSQLConnection(database="master")
            conn.connect()
            cur = conn.cursor()
            
            cur.execute("SELECT name FROM sys.databases WHERE name = ?", (database_name,))
            if not cur.fetchone():
                print(f"üîß T·∫°o database {database_name}...")
                cur.execute(f"CREATE DATABASE [{database_name}]")
                success("Database ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!")
            else:
                info(f"Database {database_name} ƒë√£ t·ªìn t·∫°i")
            
            conn.close()
            return True
        except Exception as e:
            error(f"L·ªói khi t·∫°o database: {e}")
            return False

    @staticmethod
    def get_conn():
        try:
            return MSSQLConnection(database="DangKyKhamBenh")
        except Exception as e:
            error(f"L·ªói k·∫øt n·ªëi database: {e}")
            raise

    @staticmethod
    def init_db(seed: bool = True) -> None:
        if not InitDB.create_database_if_not_exists():
            return False
        conn = InitDB.get_conn()
        conn.connect()
        cur = conn.cursor()
        cur.execute("""
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='user' AND xtype='U')
        CREATE TABLE [user] (
            user_id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
            username NVARCHAR(50) UNIQUE NOT NULL,
            role NVARCHAR(20) NOT NULL,
            pass NVARCHAR(50) NOT NULL,
            created_at DATETIME DEFAULT GETDATE()
        );
        """)
        cur.execute("""
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='PhongKham' AND xtype='U')
        CREATE TABLE PhongKham (
            PK_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
            MaPhong NVARCHAR(20) UNIQUE NOT NULL,
            TenPhong NVARCHAR(100) NOT NULL,
            BS_ID UNIQUEIDENTIFIER NULL,
            user_created UNIQUEIDENTIFIER,
            created_at DATETIME DEFAULT GETDATE()
        );
        """)
        cur.execute("""
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='DM_DichVuKyThuat' AND xtype='U')
        CREATE TABLE DM_DichVuKyThuat (
            dv_id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
            MaDichVu NVARCHAR(20) UNIQUE NOT NULL,
            TenDichVu NVARCHAR(100) NOT NULL,
            GiaDichVu INT NOT NULL,
            user_created UNIQUEIDENTIFIER,
            created_at DATETIME DEFAULT GETDATE()
        );
        """)

        cur.execute("""
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='BenhNhan' AND xtype='U')
        CREATE TABLE BenhNhan (
            BN_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
            PID NVARCHAR(8) UNIQUE NOT NULL,
            HoTen NVARCHAR(100) NOT NULL,
            GioiTinh NVARCHAR(10) NOT NULL,
            NgaySinh DATE NULL,
            NamSinh INT,
            SoCCCD NVARCHAR(20) UNIQUE,
            SoCMND NVARCHAR(20),
            PhuongXa NVARCHAR(200),
            Tinh NVARCHAR(50),
            user_created UNIQUEIDENTIFIER,
            created_at DATETIME DEFAULT GETDATE()
        );
        """)

        cur.execute("""
        IF COL_LENGTH('BenhNhan', 'NgaySinh') IS NULL
            ALTER TABLE BenhNhan ADD NgaySinh DATE NULL;
        """)

        cur.execute("""
        IF COL_LENGTH('BenhNhan', 'PID') IS NULL
            ALTER TABLE BenhNhan ADD PID NVARCHAR(8) NULL;
        """)

        cur.execute("""
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='BacSi' AND xtype='U')
        CREATE TABLE BacSi (
            BS_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
            MaBacSi NVARCHAR(20) UNIQUE NOT NULL,
            HoTen NVARCHAR(100) NOT NULL,
            ChuyenKhoa NVARCHAR(100),
            SoDienThoai NVARCHAR(15),
            Email NVARCHAR(100),
            user_created UNIQUEIDENTIFIER,
            created_at DATETIME DEFAULT GETDATE()
        );
        """)

        cur.execute("""
        IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='TiepNhan' AND xtype='U')
        CREATE TABLE TiepNhan (
            TiepNhan_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
            MaTiepNhan NVARCHAR(20) UNIQUE NOT NULL,
            BN_ID UNIQUEIDENTIFIER NOT NULL,
            LyDoKham NVARCHAR(200),
            Dv_ID UNIQUEIDENTIFIER NULL,
            PK_ID UNIQUEIDENTIFIER NULL,
            BS_ID UNIQUEIDENTIFIER NULL,
            user_created UNIQUEIDENTIFIER,
            created_at DATETIME DEFAULT GETDATE()
        );
        """)

        
        cur.execute("""
        IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_PhongKham_BacSi')
        ALTER TABLE PhongKham DROP CONSTRAINT FK_PhongKham_BacSi
        """)
        
        cur.execute("""
        IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_BenhNhan')
        ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_BenhNhan
        """)
        
        cur.execute("""
        IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_DichVu')
        ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_DichVu
        """)
        
        cur.execute("""
        IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_PhongKham')
        ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_PhongKham
        """)
        
        cur.execute("""
        IF EXISTS (SELECT * FROM sys.foreign_keys WHERE name = 'FK_TiepNhan_BacSi')
        ALTER TABLE TiepNhan DROP CONSTRAINT FK_TiepNhan_BacSi
        """)
        
        cur.execute("""
        ALTER TABLE PhongKham ADD CONSTRAINT FK_PhongKham_BacSi 
        FOREIGN KEY (BS_ID) REFERENCES BacSi(BS_ID) ON DELETE NO ACTION
        """)
        
        cur.execute("""
        ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_BenhNhan
        FOREIGN KEY (BN_ID) REFERENCES BenhNhan(BN_ID) ON DELETE NO ACTION
        """)
        
        cur.execute("""
        ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_DichVu
        FOREIGN KEY (Dv_ID) REFERENCES DM_DichVuKyThuat(dv_id) ON DELETE NO ACTION
        """)
        
        cur.execute("""
        ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_PhongKham
        FOREIGN KEY (PK_ID) REFERENCES PhongKham(PK_ID) ON DELETE NO ACTION
        """)
        
        cur.execute("""
        ALTER TABLE TiepNhan ADD CONSTRAINT FK_TiepNhan_BacSi
        FOREIGN KEY (BS_ID) REFERENCES BacSi(BS_ID) ON DELETE NO ACTION
        """)

        if seed:
            cur.execute("""
            IF NOT EXISTS (SELECT 1 FROM [user] WHERE username = 'admin')
            BEGIN
                DECLARE @admin_id UNIQUEIDENTIFIER = NEWID()
                INSERT INTO [user](user_id, username, role, pass) 
                VALUES (@admin_id, 'admin', 'ADMIN', 'admin')
                
                -- T·∫°o ph√≤ng kh√°m v√† d·ªãch v·ª• m·∫∑c ƒë·ªãnh
                INSERT INTO PhongKham(MaPhong, TenPhong, user_created) 
                VALUES ('PK001','Ph√≤ng N·ªôi t·ªïng qu√°t', @admin_id)
                
                INSERT INTO DM_DichVuKyThuat(MaDichVu, TenDichVu, GiaDichVu, user_created) 
                VALUES ('DV001','Kh√°m t·ªïng qu√°t', 150000, @admin_id)
            END
            """)

        conn.commit()
        conn.close()
class Import_data:
    @classmethod
    def kiem_tra_ton_tai_DB(cls):
        """Ki·ªÉm tra database v√† c√°c b·∫£ng c·∫ßn thi·∫øt ƒë√£ t·ªìn t·∫°i ch∆∞a."""
        try:
            conn = MSSQLConnection(database="DangKyKhamBenh")
            conn.connect()
            cur = conn.cursor()
            
            cur.execute("SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME IN ('user', 'PhongKham', 'DM_DichVuKyThuat', 'BacSi')")
            table_count = cur.fetchone()[0]
            
            conn.close()
            return table_count >= 4
        except Exception as e:
            error(f"L·ªói k·∫øt n·ªëi database: {e}")
            return False
    @staticmethod
    def import_phong_kham():
        conn = MSSQLConnection(database="DangKyKhamBenh")
        conn.connect()
        cur = conn.cursor()
        
        phong_kham_data = [
            ('PK002', 'Ph√≤ng Nhi khoa'),
            ('PK003', 'Ph√≤ng S·∫£n ph·ª• khoa'),
            ('PK004', 'Ph√≤ng Tai M≈©i H·ªçng'),
            ('PK005', 'Ph√≤ng M·∫Øt'),
            ('PK006', 'Ph√≤ng Da li·ªÖu'),
            ('PK007', 'Ph√≤ng Tim m·∫°ch'),
            ('PK008', 'Ph√≤ng Th·∫ßn kinh'),
            ('PK009', 'Ph√≤ng C∆° x∆∞∆°ng kh·ªõp'),
            ('PK010', 'Ph√≤ng Ung b∆∞·ªõu'),
            ('PK011', 'Ph√≤ng C·∫•p c·ª©u'),
            ('PK012', 'Ph√≤ng X-Quang'),
            ('PK013', 'Ph√≤ng Si√™u √¢m'),
            ('PK014', 'Ph√≤ng X√©t nghi·ªám'),
            ('PK015', 'Ph√≤ng Ph·ª•c h·ªìi ch·ª©c nƒÉng'),
            ('PK016', 'Ph√≤ng V·∫≠t l√Ω tr·ªã li·ªáu'),
            ('PK017', 'Ph√≤ng T∆∞ v·∫•n dinh d∆∞·ª°ng'),
        ]
        
        print("üè• ƒêang import d·ªØ li·ªáu Ph√≤ng kh√°m...")
        for ma_phong, ten_phong in phong_kham_data:
            try:
                cur.execute("SELECT COUNT(*) FROM PhongKham WHERE MaPhong = ?", (ma_phong,))
                exists = cur.fetchone()[0]
                
                if exists == 0:
                    cur.execute("""
                        INSERT INTO PhongKham(PK_ID, MaPhong, TenPhong) 
                        VALUES (NEWID(), ?, ?)
                    """, (ma_phong, ten_phong))
                    success(f"ƒê√£ th√™m: {ma_phong} - {ten_phong}")
                else:
                    warning(f"ƒê√£ t·ªìn t·∫°i: {ma_phong} - {ten_phong}")
            except Exception as e:
                error(f"L·ªói khi th√™m {ma_phong}: {e}")
        conn.commit()
        conn.close()
    @staticmethod
    def import_dich_vu():
        conn = MSSQLConnection(database="DangKyKhamBenh")
        conn.connect()
        cur = conn.cursor()
        
        dich_vu_data = [
            ('DV002', 'Kh√°m chuy√™n khoa Nhi', 120000),
            ('DV003', 'Kh√°m S·∫£n ph·ª• khoa', 150000),
            ('DV004', 'Kh√°m Tai M≈©i H·ªçng', 100000),
            ('DV005', 'Kh√°m M·∫Øt', 80000),
            ('DV006', 'Kh√°m Da li·ªÖu', 90000),
            ('DV007', 'Kh√°m Tim m·∫°ch', 200000),
            ('DV008', 'Kh√°m Th·∫ßn kinh', 180000),
            ('DV009', 'Kh√°m C∆° x∆∞∆°ng kh·ªõp', 130000),
            ('DV010', 'Kh√°m Ung b∆∞·ªõu', 250000),
            ('DV011', 'C·∫•p c·ª©u', 300000),
            ('DV012', 'Ch·ª•p X-Quang', 150000),
            ('DV013', 'Si√™u √¢m t·ªïng qu√°t', 200000),
            ('DV014', 'Si√™u √¢m thai', 180000),
            ('DV015', 'X√©t nghi·ªám m√°u t·ªïng qu√°t', 100000),
            ('DV016', 'X√©t nghi·ªám sinh h√≥a', 150000),
            ('DV017', 'X√©t nghi·ªám n∆∞·ªõc ti·ªÉu', 50000),
            ('DV018', 'Ch·ª•p CT Scanner', 500000),
            ('DV019', 'Ch·ª•p MRI', 800000),
            ('DV020', 'N·ªôi soi d·∫° d√†y', 300000),
            ('DV021', 'ƒêi·ªán tim', 80000),
            ('DV022', 'ƒêo huy·∫øt √°p 24h', 200000),
            ('DV023', 'Ph·ª•c h·ªìi ch·ª©c nƒÉng', 150000),
            ('DV024', 'V·∫≠t l√Ω tr·ªã li·ªáu', 120000),
            ('DV025', 'T∆∞ v·∫•n dinh d∆∞·ª°ng', 100000)
        ]
        
        print("ü©∫ ƒêang import d·ªØ li·ªáu D·ªãch v·ª•...")
        for ma_dv, ten_dv, gia in dich_vu_data:
            try:
                cur.execute("SELECT COUNT(*) FROM DM_DichVuKyThuat WHERE MaDichVu = ?", (ma_dv,))
                exists = cur.fetchone()[0]
                
                if exists == 0:
                    cur.execute("""
                        INSERT INTO DM_DichVuKyThuat(dv_id, MaDichVu, TenDichVu, GiaDichVu) 
                        VALUES (NEWID(), ?, ?, ?)
                    """, (ma_dv, ten_dv, gia))
                    success(f"ƒê√£ th√™m: {ma_dv} - {ten_dv} - {gia:,}ƒë")
                else:
                    warning(f"ƒê√£ t·ªìn t·∫°i: {ma_dv} - {ten_dv}")
            except Exception as e:
                error(f"L·ªói khi th√™m {ma_dv}: {e}")

        conn.commit()
        conn.close()
    @staticmethod
    def import_bac_si():
        conn = MSSQLConnection(database="DangKyKhamBenh")
        conn.connect()
        cur = conn.cursor()
        
        bac_si_data = [
            ('BS001', 'BS. Nguy·ªÖn VƒÉn An', 'N·ªôi t·ªïng qu√°t', '0901234567', 'bs.an@hospital.com'),
            ('BS002', 'TS.BS. Tr·∫ßn Th·ªã B√¨nh', 'Nhi khoa', '0907654321', 'bs.binh@hospital.com'),
            ('BS003', 'PGS.TS. L√™ VƒÉn C∆∞·ªùng', 'S·∫£n ph·ª• khoa', '0912345678', 'bs.cuong@hospital.com'),
            ('BS004', 'BS. Ph·∫°m Th·ªã Dung', 'Tai M≈©i H·ªçng', '0987654321', 'bs.dung@hospital.com'),
            ('BS005', 'BS. Ho√†ng Minh Tuan', 'M·∫Øt', '0934567890', 'bs.tuan@hospital.com'),
            ('BS006', 'BS. ƒêinh Th·ªã Hoa', 'Da li·ªÖu', '0923456789', 'bs.hoa@hospital.com'),
            ('BS007', 'GS.TS. V≈© C√¥ng Minh', 'Tim m·∫°ch', '0945678901', 'bs.minh@hospital.com'),
            ('BS008', 'PGS. Ng√¥ Th·ªã Linh', 'Th·∫ßn kinh', '0956789012', 'bs.linh@hospital.com'),
            ('BS009', 'BS. B√πi VƒÉn Khoa', 'C∆° x∆∞∆°ng kh·ªõp', '0967890123', 'bs.khoa@hospital.com'),
            ('BS010', 'TS.BS. Mai Th·ªã Lan', 'Ung b∆∞·ªõu', '0978901234', 'bs.lan@hospital.com'),
            ('BS011', 'BS. Tr·ªãnh VƒÉn Nam', 'C·∫•p c·ª©u', '0989012345', 'bs.nam@hospital.com'),
            ('BS012', 'BS. L√Ω Th·ªã Oanh', 'Ch·∫©n ƒëo√°n h√¨nh ·∫£nh', '0990123456', 'bs.oanh@hospital.com'),
            ('BS013', 'BS. ƒê·ªó Minh Ph√∫', 'Ch·∫©n ƒëo√°n h√¨nh ·∫£nh', '0901234560', 'bs.phu@hospital.com'),
            ('BS014', 'BS. Cao Th·ªã Quy√™n', 'X√©t nghi·ªám', '0912345601', 'bs.quyen@hospital.com'),
            ('BS015', 'BS. L∆∞∆°ng VƒÉn S∆°n', 'Ph·ª•c h·ªìi ch·ª©c nƒÉng', '0923456012', 'bs.son@hospital.com'),
        ]
        
        info("üë®‚Äç‚öïÔ∏è ƒêang import d·ªØ li·ªáu B√°c sƒ©...")
        for ma_bs, ho_ten, chuyen_khoa, sdt, email in bac_si_data:
            try:
                cur.execute("SELECT COUNT(*) FROM BacSi WHERE MaBacSi = ?", (ma_bs,))
                exists = cur.fetchone()[0]
                
                if exists == 0:
                    cur.execute("""
                        INSERT INTO BacSi(MaBacSi, HoTen, ChuyenKhoa, SoDienThoai, Email) 
                        VALUES (?, ?, ?, ?, ?)
                    """, (ma_bs, ho_ten, chuyen_khoa, sdt, email))
                    success(f"  ƒê√£ th√™m: {ma_bs} - {ho_ten} - {chuyen_khoa}")
                else:
                    warning(f"  ƒê√£ t·ªìn t·∫°i: {ma_bs} - {ho_ten}")
            except Exception as e:
                error(f"  L·ªói khi th√™m {ma_bs}: {e}")
        
        conn.commit()
        conn.close()
    @staticmethod
    def phancong_bacsi_phongkham():
        conn = MSSQLConnection(database="DangKyKhamBenh")
        conn.connect()
        cur = conn.cursor()
        
        ds_phan_cong_bs_pk = [
            ('BS001', 'PK001'),
            ('BS002', 'PK002'),
            ('BS003', 'PK003'),
            ('BS004', 'PK004'),
            ('BS005', 'PK005'),
            ('BS006', 'PK006'),
            ('BS007', 'PK007'),
            ('BS008', 'PK008'),
            ('BS009', 'PK009'),
            ('BS010', 'PK010'),
            ('BS011', 'PK011'),
            ('BS012', 'PK012'),
            ('BS013', 'PK012'),
            ('BS014', 'PK014'),
            ('BS015', 'PK015'),
        ]
        
        print("üîÑ ƒêang g√°n b√°c sƒ© v√†o ph√≤ng kh√°m...")
        for ma_bs, ma_pk in ds_phan_cong_bs_pk:
            try:
                cur.execute("SELECT BS_ID FROM BacSi WHERE MaBacSi = ?", (ma_bs,))
                bs_row = cur.fetchone()
                if not bs_row:
                    error(f"Kh√¥ng t√¨m th·∫•y b√°c sƒ© {ma_bs}")
                    continue
                bs_id = bs_row[0]
                
                cur.execute("SELECT PK_ID FROM PhongKham WHERE MaPhong = ?", (ma_pk,))
                pk_row = cur.fetchone()
                if not pk_row:
                    error(f"Kh√¥ng t√¨m th·∫•y ph√≤ng kh√°m {ma_pk}")
                    continue
                pk_id = pk_row[0]
                
                cur.execute("SELECT BS_ID FROM PhongKham WHERE PK_ID = ?", (pk_id,))
                bs_ht = cur.fetchone()
                
                if not bs_ht or bs_ht.BS_ID is None:
                    cur.execute("UPDATE PhongKham SET BS_ID = ? WHERE PK_ID = ?", (bs_id, pk_id))
                    success(f"ƒê√£ g√°n b√°c sƒ© {ma_bs} v√†o ph√≤ng kh√°m {ma_pk}")
                else:
                    warning(f"Ph√≤ng kh√°m {ma_pk} ƒë√£ c√≥ b√°c sƒ© ch√≠nh")

            except Exception as e:
                error(f"L·ªói khi g√°n {ma_bs}: {e}")

        conn.commit()
        conn.close()
    def show_statistics():
        conn = MSSQLConnection(database="DangKyKhamBenh")
        conn.connect()
        cur = conn.cursor()
        
        cur.execute("SELECT COUNT(*) FROM PhongKham")
        pk_count = cur.fetchone()[0]
        
        cur.execute("SELECT COUNT(*) FROM DM_DichVuKyThuat")
        dv_count = cur.fetchone()[0]
        
        cur.execute("SELECT COUNT(*) FROM BacSi")
        bs_count = cur.fetchone()[0]
        
        conn.close()
        
        print("\n" + "="*50)
        print("           üìä TH·ªêNG K√ä SAU IMPORT")
        print_separator(50,"=")
        print(f"üè• T·ªïng s·ªë Ph√≤ng kh√°m: {pk_count}")
        print(f"ü©∫ T·ªïng s·ªë D·ªãch v·ª•: {dv_count}")
        print(f"üë®‚Äç‚öïÔ∏è T·ªïng s·ªë B√°c sƒ©: {bs_count}")
        print_separator(50,"=")
    def import_pk_dv_bs():
        print_separator(60,"=")
        print("     üöÄ IMPORT D·ªÆ LI·ªÜU M·∫™U - PH√íNG KH√ÅM, D·ªäCH V·ª§ & B√ÅC Sƒ®")
        print_separator(60,"=")
        
        try:
            Import_data.import_phong_kham()
            print()
            
            Import_data.import_dich_vu()
            print()
            
            Import_data.import_bac_si()
            print()
            
            Import_data.show_statistics()
            
            print("\nImport ho√†n t·∫•t!")
            
        except Exception as e:
            error(f"L·ªói trong qu√° tr√¨nh import: {e}")
    def main():
        """Ch·∫°y import d·ªØ li·ªáu m·∫´u."""
        print("B·∫Øt ƒë·∫ßu import d·ªØ li·ªáu m·∫´u...")
        print_separator(60,"=")
        
        try:
            if not Import_data.kiem_tra_ton_tai_DB():
                warning("Database 'DangKyKhamBenh' ch∆∞a t·ªìn t·∫°i ho·∫∑c ch∆∞a c√≥ b·∫£ng c·∫ßn thi·∫øt.")
                print("üí° Vui l√≤ng ch·∫°y init_db() ƒë·ªÉ t·∫°o database v√† schema tr∆∞·ªõc khi import d·ªØ li·ªáu.")
                sys.exit(1)
            Import_data.import_phong_kham()
            print()
            
            Import_data.import_dich_vu()
            print()
            
            Import_data.import_bac_si()
            print()
            
            Import_data.phancong_bacsi_phongkham()
            print()
            
            print_separator(60,"=")
            success("Ho√†n th√†nh import d·ªØ li·ªáu m·∫´u!")
            conn = MSSQLConnection(database="DangKyKhamBenh")
            conn.connect()
            cur = conn.cursor()
            
            cur.execute("SELECT COUNT(*) FROM PhongKham")
            pk_count = cur.fetchone()[0]
            print(f"   ‚Ä¢ Ph√≤ng kh√°m: {pk_count} records")
            
            cur.execute("SELECT COUNT(*) FROM DM_DichVuKyThuat")
            dv_count = cur.fetchone()[0]
            print(f"   ‚Ä¢ D·ªãch v·ª•: {dv_count} records")
            
            cur.execute("SELECT COUNT(*) FROM BacSi")
            bs_count = cur.fetchone()[0]
            print(f"   ‚Ä¢ B√°c sƒ©: {bs_count} records")
            
            conn.close()
            
        except Exception as e:
            error(f"L·ªói khi import d·ªØ li·ªáu: {e}")
            print("üí° Vui l√≤ng ki·ªÉm tra:")
            print("   1. Database server ƒë√£ kh·ªüi ƒë·ªông?")
            print("   2. C·∫•u h√¨nh k·∫øt n·ªëi trong db.py ƒë√£ ƒë√∫ng?")
            print("   3. ƒê√£ ch·∫°y init_db() ƒë·ªÉ t·∫°o schema?")
            sys.exit(1)

if __name__ == "__main__":
        Import_data.main()