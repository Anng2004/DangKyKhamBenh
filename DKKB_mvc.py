from __future__ import annotations
from typing import List, Optional
from DangKyKhamBenh.DKKB_TiepNhan import AbcTiepNhan, TiepNhanRepo, AbcBenhNhan, BenhNhanRepo, AbcPhongKham, PhongKhamRepo, AbcDichVu, DichVuRepo, ChiPhiKham, AbcBacSi, BacSiRepo
from utils.qr_utils import parse_qr_code, display_benh_nhan_info, generate_username_from_qr, generate_password_from_qr, QRbenh_nhanInfo
# ===== MVC Components =====

class View:
    @classmethod
    def print_list(cls, items: List[object]) -> None:
        for it in items: print(it)

    @classmethod
    def print_message(cls, msg: str) -> None:
        print(msg)


class Model:
    def __init__(self):
        self.bn_repo = BenhNhanRepo()
        self.pk_repo = PhongKhamRepo()
        self.dv_repo = DichVuRepo()
        self.tn_repo = TiepNhanRepo()
        self.bs_repo = BacSiRepo()

    # Th√¥ng tin danh s√°ch b·ªánh nh√¢n, ph√≤ng kh√°m, d·ªãch v·ª•, ti·∫øp nh·∫≠n, b√°c sƒ©
    def ds_benh_nhan(self) -> List[AbcBenhNhan]:
        return self.bn_repo.list_all()

    def ds_phong_kham(self) -> List[AbcPhongKham]:
        return self.pk_repo.list_all()

    def ds_dich_vu(self) -> List[AbcDichVu]:
        return self.dv_repo.list_all()

    def ds_tiep_nhan(self) -> List[AbcTiepNhan]:
        return self.tn_repo.list_all()

    def ds_tiep_nhan_theo_user(self, username: str) -> List[AbcTiepNhan]:
        return self.tn_repo.list_by_user(username)

    def ds_bac_si(self) -> List[AbcBacSi]:
        return self.bs_repo.list_all()

#== Controller ==#
class Controller:
    def __init__(self, view: View, model: Model):
        self.view = view
        self.model = model

    def them_benh_nhan(
        self,
        ho_ten: str,
        gioi_tinh: str,
        ngay_sinh_ddmmyyyy: str, 
        so_cccd: str
    ) -> None:
        from utils.qr_utils import phantich_cccd, lay_thongtin_tinhmoi_tu_tinhcu
        
        tinh_cu, gioitinh_cccd, nam_sinh_cccd, tinh_moi = phantich_cccd(so_cccd)
        
        try:
            input_year = int(ngay_sinh_ddmmyyyy.split('/')[-1])
        except:
            input_year = None
        
        nam_sinh_hieuluc = nam_sinh_cccd if nam_sinh_cccd else input_year
        
        tinh_hientai = tinh_moi if tinh_moi else tinh_cu
        
        if nam_sinh_cccd and nam_sinh_cccd != input_year:
            self.view.print_message(f"T·ª± ƒë·ªông c·∫≠p nh·∫≠t nƒÉm sinh t·ª´ CCCD: {nam_sinh_cccd} (thay v√¨ {input_year})")
        
        if tinh_hientai:
            self.view.print_message(f"T·ª± ƒë·ªông x√°c ƒë·ªãnh t·ªânh t·ª´ CCCD: {tinh_hientai}")
        
        if gioitinh_cccd and gioitinh_cccd != gioi_tinh:
            self.view.print_message(f"L∆∞u √Ω: Gi·ªõi t√≠nh nh·∫≠p ({gioi_tinh}) kh√°c v·ªõi CCCD ({gioitinh_cccd})")
        
        bn_id = self.model.bn_repo.create_enhanced(
            ho_ten, gioi_tinh, ngay_sinh_ddmmyyyy, so_cccd, 
            nam_sinh_hieuluc, tinh_hientai
        )
        self.view.print_message(f"ƒê√£ th√™m b·ªánh nh√¢n id={bn_id} v√† t·∫°o t√†i kho·∫£n USER role (username = CCCD).")
        
    def them_benh_nhan_daydu(
        self,
        ho_ten: str,
        gioi_tinh: str,
        ngay_sinh_ddmmyyyy: str,
        so_cccd: str,
        phuong_xa: str = "",
        tinh: str = ""
    ) -> None:
        from utils.qr_utils import phantich_cccd, lay_thongtin_tinhmoi_tu_tinhcu
        
        tinh_cu, gioitinh_cccd, nam_sinh_cccd, tinh_moi = phantich_cccd(so_cccd)
        
        try:
            input_year = int(ngay_sinh_ddmmyyyy.split('/')[-1])
        except:
            input_year = None
        
        nam_sinh_hieuluc = nam_sinh_cccd if nam_sinh_cccd else input_year
        
        tinh_hientai = tinh if tinh else (tinh_moi if tinh_moi else tinh_cu)
        
        if nam_sinh_cccd and nam_sinh_cccd != input_year:
            self.view.print_message(f"T·ª± ƒë·ªông c·∫≠p nh·∫≠t nƒÉm sinh t·ª´ CCCD: {nam_sinh_cccd} (thay v√¨ {input_year})")
        
        if not tinh and tinh_hientai:
            self.view.print_message(f"T·ª± ƒë·ªông x√°c ƒë·ªãnh t·ªânh t·ª´ CCCD: {tinh_hientai}")
        
        if gioitinh_cccd and gioitinh_cccd != gioi_tinh:
            self.view.print_message(f"L∆∞u √Ω: Gi·ªõi t√≠nh nh·∫≠p ({gioi_tinh}) kh√°c v·ªõi CCCD ({gioitinh_cccd})")
        
        bn_id = self.model.bn_repo.create_with_address(
            ho_ten, gioi_tinh, ngay_sinh_ddmmyyyy, so_cccd, 
            phuong_xa, tinh_hientai, nam_sinh_hieuluc
        )
        self.view.print_message(f"ƒê√£ th√™m b·ªánh nh√¢n id={bn_id} v√† t·∫°o t√†i kho·∫£n USER role (username = CCCD).")

    def tiep_nhan(self, so_cccd: str, ma_dv: str, ma_pk: str, ly_do: str, ma_bs: str = "") -> None:
        tiep_nhan, chi_phi = self.them_tiep_nhan(so_cccd, ma_dv, ma_pk, ly_do, ma_bs)
        
        if tiep_nhan and chi_phi is not None:
            bs_info = f" - B√°c sƒ©: {ma_bs}" if ma_bs else ""
            self.view.print_message(f"ƒêƒÉng k√Ω th√†nh c√¥ng (id={tiep_nhan.ma_tn}). Chi ph√≠ t·∫°m t√≠nh: {chi_phi:,}ƒë{bs_info}")
            
            self.in_thong_tin_tiep_nhan(tiep_nhan, chi_phi)

    def in_thong_tin_tiep_nhan(self, tiep_nhan: 'AbcTiepNhan', chi_phi: int) -> None:
        self.view.print_message("\n" + "="*60)
        self.view.print_message("üìã TH√îNG TIN TI·∫æP NH·∫¨N")
        self.view.print_message("="*60)
        self.view.print_message(f"üÜî ID Ti·∫øp nh·∫≠n    : {tiep_nhan.ma_tn}")
        self.view.print_message(f"üìÑ CCCD            : {tiep_nhan._bn.so_cccd}")
        self.view.print_message(f"üë§ H·ªç t√™n          : {tiep_nhan._bn._ho_ten}")
        self.view.print_message(f"üìù L√Ω do kh√°m      : {tiep_nhan._ly_do}")
        self.view.print_message(f"üè• D·ªãch v·ª• ƒëƒÉng k√Ω : {tiep_nhan._dv._ma_dv} - {tiep_nhan._dv._ten_dv}")
        self.view.print_message(f"üè† Ph√≤ng kh√°m      : {tiep_nhan._pk._ma_phong} - {tiep_nhan._pk._ten_phong}")
        if tiep_nhan._bs:
            self.view.print_message(f"üë®‚Äç‚öïÔ∏è B√°c sƒ©          : {tiep_nhan._bs.ma_bs} - {tiep_nhan._bs.ho_ten} ({tiep_nhan._bs.chuyen_khoa})")
        else:
            self.view.print_message(f"üë®‚Äç‚öïÔ∏è B√°c sƒ©          : Ch∆∞a ch·ªçn")
        self.view.print_message(f"üí∞ Chi ph√≠ t·∫°m t√≠nh: {chi_phi:,}ƒë")
        self.view.print_message("="*60)

    def tiep_nhan_cho_user(self, username: str, ma_dv: str, ma_pk: str, ly_do: str, ma_bs: str = "") -> None:
        tiep_nhan, chi_phi = self.them_tiep_nhan(username, ma_dv, ma_pk, ly_do, ma_bs)
        
        if tiep_nhan and chi_phi is not None:
            bs_info = f" - B√°c sƒ©: {ma_bs}" if ma_bs else ""
            self.view.print_message(f"ƒêƒÉng k√Ω th√†nh c√¥ng (id={tiep_nhan.ma_tn}). Chi ph√≠ t·∫°m t√≠nh: {chi_phi:,}ƒë{bs_info}")
            
            self.in_thong_tin_tiep_nhan(tiep_nhan, chi_phi)

    def them_tiep_nhan(self, so_cccd: str, ma_dv: str, ma_pk: str, ly_do: str, ma_bs: str = "") -> tuple:
        bn = self.model.bn_repo.get_by_cccd(so_cccd)
        if not bn:
            self.view.print_message("Kh√¥ng t√¨m th·∫•y b·ªánh nh√¢n v·ªõi CCCD ƒë√£ nh·∫≠p.")
            return None, None
        
        dv = self.model.dv_repo.get_by_ma(ma_dv)
        pk = self.model.pk_repo.get_by_ma(ma_pk)
        if not dv or not pk:
            self.view.print_message("Kh√¥ng t√¨m th·∫•y d·ªãch v·ª• ho·∫∑c ph√≤ng kh√°m.")
            return None, None
        
        bs = None
        bs_id = ""
        if ma_bs:
            bs = self.model.bs_repo.get_by_ma(ma_bs)
            if not bs:
                self.view.print_message("Kh√¥ng t√¨m th·∫•y b√°c sƒ© v·ªõi m√£ ƒë√£ nh·∫≠p.")
                return None, None
            bs_id = bs.bs_id
        
        ma_tn = self.model.tn_repo.create(bn.bn_id, ly_do, dv.dv_id, pk.pk_id, bs_id)
        chi_phi = ChiPhiKham.tinh_chi_phi(dv, pk)
        
        tiep_nhan = self.model.tn_repo.get_by_ma(ma_tn)
        
        return tiep_nhan, chi_phi

    def hien_thi_ds_benh_nhan(self):
        self.view.print_list(self.model.ds_benh_nhan())

    def hien_thi_ds_phong_kham(self):
        self.view.print_list(self.model.ds_phong_kham())

    def hien_thi_ds_dich_vu(self):
        self.view.print_list(self.model.ds_dich_vu())
    
    def hien_thi_danh_sach_dich_vu_cho_user(self):
        dich_vu_list = self.model.ds_dich_vu()
        if not dich_vu_list:
            self.view.print_message("üìã Kh√¥ng c√≥ d·ªãch v·ª• n√†o!")
            return
        
        self.view.print_message("\nü©∫ DANH S√ÅCH D·ªäCH V·ª§ KH√ÅM")
        self.view.print_message("="*60)
        self.view.print_message(f"{'STT':<4} {'M√£ DV':<8} {'T√™n d·ªãch v·ª•':<30} {'Gi√° ti·ªÅn':<15}")
        self.view.print_message("-"*60)
        
        for i, dv in enumerate(dich_vu_list, 1):
            self.view.print_message(f"{i:<4} {dv._ma_dv:<8} {dv._ten_dv:<30} {dv._gia:,}ƒë")
        
        self.view.print_message("="*60)

    def hien_thi_danh_sach_phong_kham_cho_user(self):
        phong_kham_list = self.model.ds_phong_kham()
        if not phong_kham_list:
            self.view.print_message("üìã Kh√¥ng c√≥ ph√≤ng kh√°m n√†o!")
            return
        
        self.view.print_message("\nüè• DANH S√ÅCH PH√íNG KH√ÅM")
        self.view.print_message("="*80)
        self.view.print_message(f"{'STT':<4} {'M√£ PK':<8} {'T√™n ph√≤ng kh√°m':<25} {'B√°c sƒ© ph·ª• tr√°ch':<35}")
        self.view.print_message("-"*80)
        
        for i, pk in enumerate(phong_kham_list, 1):
            bs_info = pk.ten_bac_si if hasattr(pk, 'ten_bac_si') and pk.ten_bac_si else "Ch∆∞a g√°n"
            if pk._bac_si:
                bs_info = pk._bac_si.ho_ten
            self.view.print_message(f"{i:<4} {pk._ma_phong:<8} {pk._ten_phong:<25} {bs_info:<35}")
        
        self.view.print_message("="*80)

    def hien_thi_danh_sach_bac_si_cho_user(self):
        bac_si_list = self.model.ds_bac_si()
        if not bac_si_list:
            self.view.print_message("üìã Kh√¥ng c√≥ b√°c sƒ© n√†o!")
            return
        
        self.view.print_message("\nüë®‚Äç‚öïÔ∏è DANH S√ÅCH B√ÅC Sƒ®")
        self.view.print_message("="*70)
        self.view.print_message(f"{'STT':<4} {'M√£ BS':<8} {'H·ªç t√™n':<25} {'Chuy√™n khoa':<25}")
        self.view.print_message("-"*70)
        
        for i, bs in enumerate(bac_si_list, 1):
            self.view.print_message(f"{i:<4} {bs.ma_bs:<8} {bs.ho_ten:<25} {bs.chuyen_khoa:<25}")
        
        self.view.print_message("="*70)

    def hien_thi_ds_tiep_nhan(self):
        self.view.print_list(self.model.ds_tiep_nhan())
    
    def hien_thi_lich_su_kham_cua_user(self, username: str):
        lich_su = self.model.ds_tiep_nhan_theo_user(username)
        if not lich_su:
            self.view.print_message(f"üìã Kh√¥ng t√¨m th·∫•y l·ªãch s·ª≠ kh√°m cho t√†i kho·∫£n: {username}")
            return
        
        benh_nhan_info = None
        if lich_su:
            benh_nhan_info = lich_su[0]._bn
        
        self.view.print_message(f"\nüìã L·ªäCH S·ª¨ KH√ÅM B·ªÜNH")
        if benh_nhan_info:
            self.view.print_message(f"üë§ B·ªánh nh√¢n: {benh_nhan_info._ho_ten} ({benh_nhan_info._gioi_tinh}, {benh_nhan_info._nam_sinh})")
            self.view.print_message(f"üÜî CCCD: {benh_nhan_info.so_cccd}")
        self.view.print_message("="*125)
        self.view.print_message(f"{'STT':<4} {'M√£ TN':<12} {'Ng√†y kh√°m':<12} {'D·ªãch v·ª•':<30} {'Ph√≤ng kh√°m':<20} {'B√°c sƒ©':<40} {'Chi ph√≠':<12}")
        self.view.print_message("-"*125)
        
        for i, tn in enumerate(lich_su, 1):
            dv_info = f"{tn._dv.ten_dv}" if tn._dv else "Ch∆∞a c√≥"
            # c·ªông chu·ªói th√¥ng tin d·ªãch v·ª• n·∫øu qu√° d√†i
            if len(dv_info) > 28:
                dv_info = dv_info[:25] + "..."
            
            pk_info = f"{tn._pk.ten_phong}" if tn._pk else "Ch∆∞a c√≥"
            # c·ªông chu·ªói th√¥ng tin ph√≤ng kh√°m n·∫øu qu√° d√†i
            if len(pk_info) > 18:
                pk_info = pk_info[:15] + "..."
                
            bs_info = f"{tn._bs.ho_ten}" if tn._bs else "Ch∆∞a c√≥"
            # c·ªông chu·ªói th√¥ng tin b√°c sƒ© n·∫øu qu√° d√†i
            if len(bs_info) > 40:
                bs_info = bs_info[:40] + "..."
                
            chi_phi = f"{tn._dv.gia:,}ƒë" if tn._dv else "0ƒë"
            

            ngay_kham = "Ch∆∞a r√µ"
            if hasattr(tn, '_created_at') and tn._created_at:
                try:
                    ngay_kham = tn._created_at[:10] if len(tn._created_at) >= 10 else tn._created_at
                except:
                    ngay_kham = "Ch∆∞a r√µ"
            
            self.view.print_message(f"{i:<4} {tn._ma_tn:<12} {ngay_kham:<12} {dv_info:<30} {pk_info:<20} {bs_info:<40} {chi_phi:<12}")
        
        self.view.print_message("="*125)
        self.view.print_message(f"üìä T·ªïng s·ªë l·∫ßn kh√°m: {len(lich_su)}")
        
        # T√≠nh chi ph√≠ kh√°m
        total_cost = sum(tn._dv.gia for tn in lich_su if tn._dv)
        self.view.print_message(f"üí∞ T·ªïng chi ph√≠ ƒë√£ kh√°m: {total_cost:,}ƒë")
        
        # Ch·ªçn STT xem chi ti·∫øt
        if lich_su:
            self.view.print_message("\nüîç Nh·∫≠p s·ªë STT ƒë·ªÉ xem chi ti·∫øt (ho·∫∑c Enter ƒë·ªÉ quay l·∫°i):")
            try:
                choice = input().strip()
                if choice and choice.isdigit():
                    stt = int(choice)
                    if 1 <= stt <= len(lich_su):
                        self._hien_thi_chi_tiet_tiep_nhan(lich_su[stt-1])
                    else:
                        self.view.print_message("‚ùå S·ªë STT kh√¥ng h·ª£p l·ªá!")
            except:
                pass
    
    def _hien_thi_chi_tiet_tiep_nhan(self, tn: 'AbcTiepNhan'):
        """Hi·ªÉn th·ªã chi ti·∫øt m·ªôt l·∫ßn ti·∫øp nh·∫≠n"""
        self.view.print_message(f"\nüîç CHI TI·∫æT L·ªäCH S·ª¨ KH√ÅM")
        self.view.print_message("="*60)
        self.view.print_message(f"üìã M√£ ti·∫øp nh·∫≠n: {tn._ma_tn}")
        
        # Th√¥ng tin b·ªánh nh√¢n
        self.view.print_message(f"üë§ B·ªánh nh√¢n: {tn._bn._ho_ten}")
        self.view.print_message(f"   - Gi·ªõi t√≠nh: {tn._bn._gioi_tinh}")
        self.view.print_message(f"   - NƒÉm sinh: {tn._bn._nam_sinh}")
        self.view.print_message(f"   - CCCD: {tn._bn.so_cccd}")
        
        # th√¥ng tin dich v·ª• ƒëƒÉng k√Ω
        if tn._dv:
            self.view.print_message(f"ü©∫ D·ªãch v·ª•: {tn._dv.ten_dv}")
            self.view.print_message(f"   - M√£ d·ªãch v·ª•: {tn._dv.ma_dv}")
            self.view.print_message(f"   - Gi√°: {tn._dv.gia:,}ƒë")
        
        # th√¥ng tin ph√≤ng kh√°m ƒëƒÉng k√Ω
        if tn._pk:
            self.view.print_message(f"üè• Ph√≤ng kh√°m: {tn._pk.ten_phong}")
            self.view.print_message(f"   - M√£ ph√≤ng: {tn._pk.ma_phong}")
        
        # th√¥ng tin b√°c sƒ©
        if tn._bs:
            self.view.print_message(f"üë®‚Äç‚öïÔ∏è B√°c sƒ©: {tn._bs.ho_ten}")
            self.view.print_message(f"   - M√£ b√°c sƒ©: {tn._bs.ma_bs}")
            self.view.print_message(f"   - Chuy√™n khoa: {tn._bs.chuyen_khoa}")
        
        # l√Ω do kh√°m
        self.view.print_message(f"üìù L√Ω do kh√°m: {tn._ly_do}")
        
        # ng√†y kh√°m
        if hasattr(tn, '_created_at') and tn._created_at:
            self.view.print_message(f"üìÖ Ng√†y kh√°m: {tn._created_at}")
        
        self.view.print_message("="*60)
        input("\nüì• Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c...")
        
    def hien_thi_lich_su_kham_cua_user_chi_tiet(self, username: str):
        lich_su = self.model.ds_tiep_nhan_theo_user(username)
        if not lich_su:
            self.view.print_message(f"üìã Kh√¥ng t√¨m th·∫•y l·ªãch s·ª≠ kh√°m cho t√†i kho·∫£n: {username}")
            return
            
        benh_nhan_info = lich_su[0]._bn if lich_su else None
        
        while True:
            self.view.print_message(f"\nüìã L·ªäCH S·ª¨ KH√ÅM CHI TI·∫æT")
            if benh_nhan_info:
                self.view.print_message(f"üë§ {benh_nhan_info._ho_ten} ({benh_nhan_info.so_cccd})")
            
            self.view.print_message("\nüîß T√πy ch·ªçn:")
            self.view.print_message("1. üìã Xem t·∫•t c·∫£ l·ªãch s·ª≠")  
            self.view.print_message("2. üîç T√¨m theo m√£ ti·∫øp nh·∫≠n")
            self.view.print_message("0. ‚¨ÖÔ∏è  Quay l·∫°i")
            
            try:
                choice = int(input("Ch·ªçn: ").strip())
                match choice:
                    case 1: 
                        self.hien_thi_lich_su_kham_cua_user(username)
                        break
                    case 2:
                        ma_tn = input("Nh·∫≠p m√£ ti·∫øp nh·∫≠n: ").strip()
                        found = False
                        for tn in lich_su:
                            if tn._ma_tn.upper() == ma_tn.upper():
                                self._hien_thi_chi_tiet_tiep_nhan(tn)
                                found = True
                                break
                        if not found:
                            self.view.print_message("‚ùå Kh√¥ng t√¨m th·∫•y m√£ ti·∫øp nh·∫≠n!")
                    case 0: 
                        break
                    case _: 
                        self.view.print_message("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!")
            except ValueError:
                self.view.print_message("‚ùå Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá!")

    def hien_thi_ds_bac_si(self):
        self.view.print_list(self.model.ds_bac_si())

    def hien_thi_danh_sach_benh_nhan_cho_admin(self):
        benh_nhan_list = self.model.ds_benh_nhan()
        if not benh_nhan_list:
            self.view.print_message("üìã Kh√¥ng c√≥ b·ªánh nh√¢n n√†o!")
            return
        
        self.view.print_message("\nüë≥ DANH S√ÅCH B·ªÜNH NH√ÇN")
        self.view.print_message("="*90)
        self.view.print_message(f"{'STT':<4} {'M√£ BN':<12} {'PID':<12} {'H·ªç t√™n':<20} {'Gi·ªõi t√≠nh':<8} {'NƒÉm sinh':<8} {'CCCD':<15}")
        self.view.print_message("-"*90)
        
        for i, bn in enumerate(benh_nhan_list, 1):
            self.view.print_message(f"{i:<4} {bn.ma_bn:<12} {bn.pid:<12} {bn._ho_ten:<20} {bn._gioi_tinh:<8} {bn.nam_sinh:<8} {bn.so_cccd:<15}")
        
        self.view.print_message("="*90)
        self.view.print_message(f"üìä T·ªïng c·ªông: {len(benh_nhan_list)} b·ªánh nh√¢n")

    def hien_thi_danh_sach_tiep_nhan_cho_admin(self):
        tiep_nhan_list = self.model.ds_tiep_nhan()
        if not tiep_nhan_list:
            self.view.print_message("üìã Kh√¥ng c√≥ ti·∫øp nh·∫≠n n√†o!")
            return
        
        self.view.print_message("\nüìã DANH S√ÅCH TI·∫æP NH·∫¨N")
        self.view.print_message("="*120)
        self.view.print_message(f"{'STT':<4} {'M√£ TN':<12} {'T√™n BN':<25} {'CCCD':<13} {'D·ªãch v·ª•':<30} {'Ph√≤ng kh√°m':<25} {'B√°c sƒ©':<30} {'L√Ω do':<30}")
        self.view.print_message("-"*120)
        
        for i, tn in enumerate(tiep_nhan_list, 1):
            dv_name = tn._dv._ten_dv[:30] + "..." if len(tn._dv._ten_dv) > 30 else tn._dv._ten_dv if tn._dv else "N/A"
            pk_name = tn._pk._ten_phong[:30] + "..." if len(tn._pk._ten_phong) > 30 else tn._pk._ten_phong if tn._pk else "N/A"
            bs_name = tn._bs.ho_ten[:30] + "..." if tn._bs and len(tn._bs.ho_ten) > 30 else (tn._bs.ho_ten if tn._bs else "Ch∆∞a g√°n")
            ly_do = tn._ly_do[:30] + "..." if len(tn._ly_do) > 30 else tn._ly_do

            self.view.print_message(f"{i:<4} {tn._ma_tn:<12} {tn._bn._ho_ten:<25} {tn._bn.so_cccd:<13} {dv_name:<30} {pk_name:<25} {bs_name:<30} {ly_do:<30}")

        self.view.print_message("="*120)
        self.view.print_message(f"üìä T·ªïng c·ªông: {len(tiep_nhan_list)} ti·∫øp nh·∫≠n")

    def huy_tiep_nhan(self, ma_tn: str):
        n = self.model.tn_repo.delete_by_ma(ma_tn)
        self.view.print_message(f"ƒê√£ h·ªßy {n} h·ªì s∆° ti·∫øp nh·∫≠n.")

    def them_bac_si(self, ma_bs: str, ho_ten: str, chuyen_khoa: str, so_dt: str, email: str):
        bs_id = self.model.bs_repo.create(ma_bs, ho_ten, chuyen_khoa, so_dt, email)
        self.view.print_message(f"ƒê√£ th√™m b√°c sƒ© th√†nh c√¥ng (ID: {bs_id})")

    def xoa_bac_si(self, ma_bs: str):
        n = self.model.bs_repo.delete_by_ma(ma_bs)
        self.view.print_message(f"ƒê√£ x√≥a {n} b√°c sƒ©.")

    def gan_bac_si_phong_kham(self, ma_bs: str, ma_phong: str):
        if not ma_phong:
            self.view.print_message("M√£ ph√≤ng kh√°m kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.")
            return
            
        pk = self.model.pk_repo.get_by_ma(ma_phong)
        if not pk:
            self.view.print_message("Kh√¥ng t√¨m th·∫•y ph√≤ng kh√°m v·ªõi m√£ ƒë√£ nh·∫≠p.")
            return
        
        bs = self.model.bs_repo.get_by_ma(ma_bs)
        if not bs:
            self.view.print_message("Kh√¥ng t√¨m th·∫•y b√°c sƒ© v·ªõi m√£ ƒë√£ nh·∫≠p.")
            return
        
        success = self.model.bs_repo.assign_to_phong_kham(ma_bs, ma_phong)
        if success:
            self.view.print_message(f"ƒê√£ g√°n b√°c sƒ© {bs.ho_ten} ({ma_bs}) v√†o ph√≤ng kh√°m {pk._ten_phong} ({ma_phong})")
        else:
            self.view.print_message("C√≥ l·ªói x·∫£y ra khi g√°n b√°c sƒ© v√†o ph√≤ng kh√°m.")

    def process_qr_scan(self, qr_string: str) -> Optional[AbcBenhNhan]:
        qr_info = parse_qr_code(qr_string)
        if not qr_info:
            self.view.print_message("‚ùå QR code kh√¥ng h·ª£p l·ªá!")
            return None
        
        display_benh_nhan_info(qr_info)
        
        # ki·ªÉm tra b·ªánh nh√¢n ƒë√£ t·ªìn t·∫°i
        existing_benh_nhan = self.model.bn_repo.get_by_cccd(qr_info.cccd)
        if existing_benh_nhan:
            print(f"\n‚ö†Ô∏è  B·ªánh nh√¢n ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng:")
            print(f"   M√£ BN: {existing_benh_nhan.ma_bn}")
            print(f"   H·ªç t√™n: {existing_benh_nhan._ho_ten}")
            xac_nhan = input("\nB·∫°n c√≥ mu·ªën s·ª≠ d·ª•ng b·ªánh nh√¢n n√†y? (y/n): ").strip().lower()
            if xac_nhan == 'y':
                return existing_benh_nhan
            else:
                return None
        
        # x√°c nh·∫≠n t·∫°o b·ªánh nh√¢n m·ªõi
        print(f"\nüìù Th√¥ng tin t√†i kho·∫£n s·∫Ω ƒë∆∞·ª£c t·∫°o:")
        print(f"   üë§ Username: {qr_info.cccd}")
        print(f"   üîí Password: {qr_info.ngay_sinh}")
        
        xac_nhan = input("\n‚úÖ X√°c nh·∫≠n t·∫°o b·ªánh nh√¢n m·ªõi? (y/n): ").strip().lower()
        if xac_nhan != 'y':
            self.view.print_message("‚ùå ƒê√£ h·ªßy t·∫°o b·ªánh nh√¢n.")
            return None
        
        # t·∫°o b·ªánh nh√¢n m·ªõi t·ª´ chu·ªói QR
        try:
            formatted_date = qr_info.get_formatted_date()  # Convert sang dd/mm/yyyy
            bn_id = self.model.bn_repo.create_from_qr(
                ho_ten=qr_info.ho_ten,
                gioi_tinh=qr_info.gioi_tinh,
                ngay_sinh_ddmmyyyy=formatted_date,
                so_cccd=qr_info.cccd,
                so_cmnd=qr_info.cmnd,
                dia_chi=qr_info.dia_chi
            )
            
            if bn_id:
                self.view.print_message("‚úÖ T·∫°o b·ªánh nh√¢n th√†nh c√¥ng!")
                self.view.print_message(f"   üìã ID: {bn_id}")
                self.view.print_message(f"   üë§ Username: {qr_info.cccd}")
                self.view.print_message(f"   üîí Password: {qr_info.ngay_sinh}")
                
                # tr·∫£ th√¥ng tin b·ªánh nh√¢n m·ªõi t·∫°o
                return self.model.bn_repo.get_by_cccd(qr_info.cccd)
            else:
                self.view.print_message("‚ùå C√≥ l·ªói khi t·∫°o b·ªánh nh√¢n!")
                return None
        except Exception as e:
            self.view.print_message(f"‚ùå L·ªói: {e}")
            return None
