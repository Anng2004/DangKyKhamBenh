#!/usr/bin/env python3
"""
c·∫≠p nh·∫≠t d·ªØ li·ªáu h√†nh ch√≠nh s√°t nh·∫≠p (NQ 202/2025/QH15)
"""

import json
from db import get_conn
from datetime import datetime
from utils.message_utils import error, success, warning, info, print_separator

# D·ªØ li·ªáu s·∫Øp x·∫øp h√†nh ch√≠nh theo NQ 202/2025/QH15
THONG_TIN_SAT_NHAP = {
    "sat_nhap": [
        {"Don_vi_moi": "Tuy√™n Quang", "don_vi_truoc_sat_nhap": ["H√† Giang", "Tuy√™n Quang"]},
        {"Don_vi_moi": "L√†o Cai", "don_vi_truoc_sat_nhap": ["L√†o Cai", "Y√™n B√°i"]},
        {"Don_vi_moi": "Th√°i Nguy√™n", "don_vi_truoc_sat_nhap": ["B·∫Øc K·∫°n", "Th√°i Nguy√™n"]},
        {"Don_vi_moi": "Ph√∫ Th·ªç", "don_vi_truoc_sat_nhap": ["H√≤a B√¨nh", "Vƒ©nh Ph√∫c", "Ph√∫ Th·ªç"]},
        {"Don_vi_moi": "B·∫Øc Ninh", "don_vi_truoc_sat_nhap": ["B·∫Øc Giang", "B·∫Øc Ninh"]},
        {"Don_vi_moi": "H∆∞ng Y√™n", "don_vi_truoc_sat_nhap": ["Th√°i B√¨nh", "H∆∞ng Y√™n"]},
        {"Don_vi_moi": "Th√†nh ph·ªë H·∫£i Ph√≤ng", "don_vi_truoc_sat_nhap": ["H·∫£i D∆∞∆°ng", "Th√†nh ph·ªë H·∫£i Ph√≤ng"]},
        {"Don_vi_moi": "Ninh B√¨nh", "don_vi_truoc_sat_nhap": ["H√† Nam", "Ninh B√¨nh", "Nam ƒê·ªãnh"]},
        {"Don_vi_moi": "Qu·∫£ng Tr·ªã", "don_vi_truoc_sat_nhap": ["Qu·∫£ng B√¨nh", "Qu·∫£ng Tr·ªã"]},
        {"Don_vi_moi": "Th√†nh ph·ªë ƒê√† N·∫µng", "don_vi_truoc_sat_nhap": ["Qu·∫£ng Nam", "Th√†nh ph·ªë ƒê√† N·∫µng"]},
        {"Don_vi_moi": "Qu·∫£ng Ng√£i", "don_vi_truoc_sat_nhap": ["Qu·∫£ng Ng√£i", "Kon Tum"]},
        {"Don_vi_moi": "Gia Lai", "don_vi_truoc_sat_nhap": ["Gia Lai", "B√¨nh ƒê·ªãnh"]},
        {"Don_vi_moi": "ƒê·∫Øk L·∫Øk", "don_vi_truoc_sat_nhap": ["Ph√∫ Y√™n", "ƒê·∫Øk L·∫Øk"]},
        {"Don_vi_moi": "Kh√°nh H√≤a", "don_vi_truoc_sat_nhap": ["Kh√°nh H√≤a", "Ninh Thu·∫≠n"]},
        {"Don_vi_moi": "L√¢m ƒê·ªìng", "don_vi_truoc_sat_nhap": ["ƒê·∫Øk N√¥ng", "L√¢m ƒê·ªìng", "B√¨nh Thu·∫≠n"]},
        {"Don_vi_moi": "Th√†nh ph·ªë H·ªì Ch√≠ Minh", "don_vi_truoc_sat_nhap": ["B√¨nh D∆∞∆°ng", "Th√†nh ph·ªë H·ªì Ch√≠ Minh", "B√† R·ªãa - V≈©ng T√†u"]},
        {"Don_vi_moi": "ƒê·ªìng Nai", "don_vi_truoc_sat_nhap": ["B√¨nh Ph∆∞·ªõc", "ƒê·ªìng Nai"]},
        {"Don_vi_moi": "T√¢y Ninh", "don_vi_truoc_sat_nhap": ["Long An", "T√¢y Ninh"]},
        {"Don_vi_moi": "Th√†nh ph·ªë C·∫ßn Th∆°", "don_vi_truoc_sat_nhap": ["S√≥c TrƒÉng", "H·∫≠u Giang", "Th√†nh ph·ªë C·∫ßn Th∆°"]},
        {"Don_vi_moi": "Vƒ©nh Long", "don_vi_truoc_sat_nhap": ["B·∫øn Tre", "Vƒ©nh Long", "Tr√† Vinh"]},
        {"Don_vi_moi": "ƒê·ªìng Th√°p", "don_vi_truoc_sat_nhap": ["Ti·ªÅn Giang", "ƒê·ªìng Th√°p"]},
        {"Don_vi_moi": "C√† Mau", "don_vi_truoc_sat_nhap": ["B·∫°c Li√™u", "C√† Mau"]},
        {"Don_vi_moi": "An Giang", "don_vi_truoc_sat_nhap": ["Ki√™n Giang", "An Giang"]}
    ],
    "giu_nguyen": [
        "Th√†nh ph·ªë H√† N·ªôi", "Cao B·∫±ng", "ƒêi·ªán Bi√™n", "H√† Tƒ©nh",
        "Lai Ch√¢u", "L·∫°ng S∆°n", "Ngh·ªá An", "Qu·∫£ng Ninh",
        "Thanh H√≥a", "S∆°n La", "Th√†nh ph·ªë Hu·∫ø"
    ]
}

def lay_thongtin_tinhmoi_tu_tinhcu(don_vi_hanh_chinh_cu: str) -> str:
    if don_vi_hanh_chinh_cu in THONG_TIN_SAT_NHAP['giu_nguyen']:
        return don_vi_hanh_chinh_cu
    
    for sat_nhap in THONG_TIN_SAT_NHAP['sat_nhap']:
        if don_vi_hanh_chinh_cu in sat_nhap['don_vi_truoc_sat_nhap']:
            return sat_nhap['Don_vi_moi']
    
    ten_day_du = {
        'H√† N·ªôi': 'Th√†nh ph·ªë H√† N·ªôi',
        'TP.H·ªì Ch√≠ Minh': 'Th√†nh ph·ªë H·ªì Ch√≠ Minh',
        'H·∫£i Ph√≤ng': 'Th√†nh ph·ªë H·∫£i Ph√≤ng',
        'ƒê√† N·∫µng': 'Th√†nh ph·ªë ƒê√† N·∫µng',
        'C·∫ßn Th∆°': 'Th√†nh ph·ªë C·∫ßn Th∆°',
        'Th·ª´a Thi√™n Hu·∫ø': 'Th√†nh ph·ªë Hu·∫ø'
    }
    
    if don_vi_hanh_chinh_cu in ten_day_du:
        return ten_day_du[don_vi_hanh_chinh_cu]
    
    for sat_nhap in THONG_TIN_SAT_NHAP['sat_nhap']:
        for include in sat_nhap['don_vi_truoc_sat_nhap']:
            if (don_vi_hanh_chinh_cu == include or 
                don_vi_hanh_chinh_cu == include.replace('Th√†nh ph·ªë ', '') or
                don_vi_hanh_chinh_cu == include.replace('TP.', '')):
                return sat_nhap['Don_vi_moi']
    
    return don_vi_hanh_chinh_cu

def CapNhat_BenhNhan_DonviHanhChinh():
    conn = get_conn()
    cur = conn.cursor()
    
    print("üîÑ B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t th√¥ng tin t·ªânh - b·ªánh nh√¢n...")
    
    cur.execute("SELECT BN_ID, Tinh FROM BenhNhan WHERE Tinh IS NOT NULL AND Tinh != ''")
    benh_nhans = cur.fetchall()
    
    SoLuong_CapNhat = 0
    SoLuong_KhongThayDoi = 0
    SoLuong_Loi = 0
    
    print(f"üìä T√¨m th·∫•y {len(benh_nhans)} b·ªánh nh√¢n c√≥ th√¥ng tin t·ªânh")
    
    for benh_nhan in benh_nhans:
        try:
            bn_id = benh_nhan.BN_ID
            don_vi_hanh_chinh_cu = benh_nhan.Tinh.strip()
            
            don_vi_hanh_chinh_moi = lay_thongtin_tinhmoi_tu_tinhcu(don_vi_hanh_chinh_cu)
            
            if don_vi_hanh_chinh_moi != don_vi_hanh_chinh_cu:
                cur.execute("""
                UPDATE BenhNhan 
                SET Tinh = ?
                WHERE BN_ID = ?
                """, (don_vi_hanh_chinh_moi, bn_id))
                SoLuong_CapNhat += 1
                
                if SoLuong_CapNhat % 50 == 0:
                    success(f"  ƒê√£ c·∫≠p nh·∫≠t {SoLuong_CapNhat} b·ªánh nh√¢n...")
            else:
                SoLuong_KhongThayDoi += 1
                
        except Exception as e:
            SoLuong_Loi += 1
            error(f"  L·ªói c·∫≠p nh·∫≠t b·ªánh nh√¢n {bn_id}: {e}")
    
    conn.commit()
    conn.close()
    
    success(f"Ho√†n th√†nh c·∫≠p nh·∫≠t:")
    print(f"   - ƒê√£ c·∫≠p nh·∫≠t: {SoLuong_CapNhat} b·ªánh nh√¢n")
    print(f"   - Kh√¥ng thay ƒë·ªïi: {SoLuong_KhongThayDoi} b·ªánh nh√¢n") 
    print(f"   - L·ªói: {SoLuong_Loi} b·ªánh nh√¢n")

def cap_nhat_tatca():
    print_separator(70,"=")
    try:

        CapNhat_BenhNhan_DonviHanhChinh()
        print()
        
    except Exception as e:
        error(f"L·ªói C·∫≠p Nh·∫≠t: {e}")
        return False
    
    return True

def kiemtra_trangthai_capnhat():
    conn = get_conn()
    cur = conn.cursor()
    
    try:
        cur.execute("""
        SELECT 
            COUNT(*) as total,
            SUM(CASE WHEN Tinh IS NOT NULL AND Tinh != '' THEN 1 ELSE 0 END) as co_tinh
        FROM BenhNhan
        """)
        
        stats = cur.fetchone()
        total = stats.total
        co_tinh = stats.co_tinh
        
        print(f"\nTh·ªëng k√™ b·ªánh nh√¢n:")
        info("   - T·ªïng s·ªë: {total}")
        info("   - C√≥ th√¥ng tin t·ªânh: {co_tinh}")
        
    except Exception as e:
        error(f"L·ªói: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    cap_nhat_tatca()